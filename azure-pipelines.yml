trigger:
- master

resources:
- repo: self

variables:
  buildConfiguration: release
  targetFramework: net5.0
  projectFile: aiof.auth.core/aiof.auth.core.csproj
  projectFileTest: aiof.auth.tests/aiof.auth.tests.csproj
  tag: $(Build.BuildId)

stages:
- stage: Build
  displayName: Build
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: DotNetCoreCLI@2
      displayName: build
      inputs:
        command: build
        projects: $(projectFile)
        arguments: -c $(buildConfiguration) -f $(targetFramework)

    - task: DotNetCoreCLI@2
      displayName: test
      inputs:
        command: test
        projects: $(projectFileTest)
        arguments: -c $(buildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=$(Build.SourcesDirectory)/TestResults/Coverage/coverage.cobertura.xml
        publishTestResults: true

    - task: PublishCodeCoverageResults@1
      displayName: publish test code coverage
      inputs:
        codeCoverageTool: Cobertura
        summaryFileLocation: $(Build.SourcesDirectory)/TestResults/Coverage/coverage.cobertura.xml

    - task: DotNetCoreCLI@2
      displayName: publish
      inputs:
        command: publish
        arguments: -c $(buildConfiguration) -o app/publish -f $(targetFramework)
        zipAfterPublish: false

    - task: Docker@2
      displayName: docker build and push
      inputs:
        containerRegistry: gkama-docker-cr
        repository: gkama/aiof-auth
        command: buildAndPush
        Dockerfile: $(Build.SourcesDirectory)/Dockerfile
        tags: |
          latest